[tool.poetry]
name = "sunbreeze"
version = "0.1.0"
description = ""
authors = ["Joakim Hells√©n <tlovinator@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
loguru = "^0.7.2"
gunicorn = "^21.2.0"
webob = "^1.8.7"
parse = "^1.20.1"
httpx = "^0.27.0"
jinja2 = "^3.1.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
fix = true
unsafe-fixes = true
preview = true
lint.select = ["ALL"]
lint.ignore = [
    "D100",    # Checks for undocumented public module definitions.
    "D104",    # Checks for undocumented public package definitions.
    "CPY001",  # Missing copyright notice at top of file
    "ERA001",  # Found commented-out code
    "FIX002",  # Line contains TODO
    "COM812",  # Checks for the absence of trailing commas.
    "ISC001",  # Checks for implicitly concatenated strings on a single line.
    "PLR6301", # Checks for the presence of unused self parameter in methods definitions.
    "ARG001",  # Checks for the presence of unused arguments in function definitions.
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "S101",    # Checks for uses of the assert keyword.
    "ARG",     # Allow unused arguments
    "FBT",     # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "D100",    # Checks for undocumented public module definitions.
    "D102",    # Checks for undocumented public method definitions.
    "D103",    # Checks for undocumented public function definitions.
    "PLR6301", # Checks for the presence of unused self parameter in methods definitions.
    "PLR2004", # Checks for the use of unnamed numerical constants ("magic") values in comparisons.
]
